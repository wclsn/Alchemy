{"Nat.coprime_iff_gcd_eq_one": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : gcd a b = 1\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "rule": "rw [Nat.coprime_iff_gcd_eq_one] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_comm": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime b a\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "rule": "rw [Nat.coprime_comm] at hab"}, {"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime b a\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "rule": "rw [\u2190Nat.coprime_comm] at hab"}], "hypo_name": [["hab"]]}
{"Nat.Prime.coprime_iff_not_dvd": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : \u00aca \u2223 b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Prime a", "rule": "rw [Nat.Prime.coprime_iff_not_dvd] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_primes": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : a \u2260 b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\ncase pp\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Prime a\n\ncase pq\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Prime b", "rule": "rw [Nat.coprime_primes] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_add_self_right": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a (b + a)\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "rule": "rw [\u2190Nat.coprime_add_self_right] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_self_add_right": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a (a + b)\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "rule": "rw [\u2190Nat.coprime_self_add_right] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_add_self_left": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime (a + b) b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "rule": "rw [\u2190Nat.coprime_add_self_left] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_self_add_left": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime (b + a) b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "rule": "rw [\u2190Nat.coprime_self_add_left] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_add_mul_right_right": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab\u271d : Coprime a b\nhab : Coprime a (b + ?k * a)\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\ncase k\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115", "rule": "rw [\u2190Nat.coprime_add_mul_right_right] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_add_mul_left_right": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab\u271d : Coprime a b\nhab : Coprime a (b + a * ?k)\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\ncase k\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115", "rule": "rw [\u2190Nat.coprime_add_mul_left_right] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_mul_right_add_right": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab\u271d : Coprime a b\nhab : Coprime a (?k * a + b)\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\ncase k\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115", "rule": "rw [\u2190Nat.coprime_mul_right_add_right] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_mul_left_add_right": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab\u271d : Coprime a b\nhab : Coprime a (a * ?k + b)\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\ncase k\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115", "rule": "rw [\u2190Nat.coprime_mul_left_add_right] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_add_mul_right_left": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab\u271d : Coprime a b\nhab : Coprime (a + ?k * b) b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\ncase k\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115", "rule": "rw [\u2190Nat.coprime_add_mul_right_left] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_add_mul_left_left": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab\u271d : Coprime a b\nhab : Coprime (a + b * ?k) b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\ncase k\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115", "rule": "rw [\u2190Nat.coprime_add_mul_left_left] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_mul_right_add_left": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab\u271d : Coprime a b\nhab : Coprime (?k * b + a) b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\ncase k\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115", "rule": "rw [\u2190Nat.coprime_mul_right_add_left] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_mul_left_add_left": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab\u271d : Coprime a b\nhab : Coprime (b * ?k + a) b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\ncase k\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115", "rule": "rw [\u2190Nat.coprime_mul_left_add_left] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_sub_self_left": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime (a - b) b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 b \u2264 a", "rule": "rw [\u2190Nat.coprime_sub_self_left] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_sub_self_right": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a (b - a)\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 a \u2264 b", "rule": "rw [\u2190Nat.coprime_sub_self_right] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_self_sub_left": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime (b - a) b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 a \u2264 b", "rule": "rw [\u2190Nat.coprime_self_sub_left] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_self_sub_right": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a (a - b)\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 b \u2264 a", "rule": "rw [\u2190Nat.coprime_self_sub_right] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_pow_left_iff": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab\u271d : Coprime a b\nhab : Coprime (a ^ ?m.797797) b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\ncase hn\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 0 < ?m.797797\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115", "rule": "rw [\u2190Nat.coprime_pow_left_iff] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_pow_right_iff": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab\u271d : Coprime a b\nhab : Coprime a (b ^ ?m.797841)\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\ncase hn\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 0 < ?m.797841\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115", "rule": "rw [\u2190Nat.coprime_pow_right_iff] at hab"}], "hypo_name": [["hab"]]}
{"Nat.coprime_iff_isRelPrime": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : IsRelPrime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "rule": "rw [Nat.coprime_iff_isRelPrime] at hab"}], "hypo_name": [["hab"]]}
{"pairwise_disjoint_on_bool": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Pairwise\n    (Disjoint on fun c => bif c then Finset.filter IsPrimePow (divisors a) else Finset.filter IsPrimePow (divisors b))", "rule": "rw [\u2190pairwise_disjoint_on_bool]"}], "hypo_name": [["hab"]]}
{"Function.update_comp_eq_of_not_mem_range'": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\ncase i\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115\n\ncase a\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Decidable (IsPrimePow ?i)\n\ncase h\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 ?i \u2209 Set.range fun a => a", "rule": "rw [\u2190Function.update_comp_eq_of_not_mem_range']"}], "hypo_name": [["hab"]]}
{"Finset.card_union_eq_card_add_card": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 (Finset.filter IsPrimePow (divisors a) \u222a Finset.filter IsPrimePow (divisors b)).card =\n    (Finset.filter IsPrimePow (divisors a)).card + (Finset.filter IsPrimePow (divisors b)).card", "rule": "rw [\u2190Finset.card_union_eq_card_add_card]"}], "hypo_name": [["hab"]]}
{"Finset.disjoint_map": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.map ?m.2133984 (Finset.filter IsPrimePow (divisors a)))\n    (Finset.map ?m.2133984 (Finset.filter IsPrimePow (divisors b)))\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115 \u21aa ?m.2133980\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Type ?u.2133978", "rule": "rw [\u2190Finset.disjoint_map]"}], "hypo_name": [["hab"]]}
{"Finset.subtype_map": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.map (Function.Embedding.subtype IsPrimePow) (Finset.subtype IsPrimePow (divisors a)))\n    (Finset.filter IsPrimePow (divisors b))", "rule": "rw [\u2190Finset.subtype_map]"}], "hypo_name": [["hab"]]}
{"Finset.disjoint_left": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2200 \u2983a_1 : \u2115\u2984, a_1 \u2208 Finset.filter IsPrimePow (divisors a) \u2192 a_1 \u2209 Finset.filter IsPrimePow (divisors b)", "rule": "rw [Finset.disjoint_left]"}], "hypo_name": [["hab"]]}
{"Finset.disjoint_right": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2200 \u2983a_1 : \u2115\u2984, a_1 \u2208 Finset.filter IsPrimePow (divisors b) \u2192 a_1 \u2209 Finset.filter IsPrimePow (divisors a)", "rule": "rw [Finset.disjoint_right]"}], "hypo_name": [["hab"]]}
{"Finset.disjoint_iff_ne": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2200 a_1 \u2208 Finset.filter IsPrimePow (divisors a), \u2200 b_1 \u2208 Finset.filter IsPrimePow (divisors b), a_1 \u2260 b_1", "rule": "rw [Finset.disjoint_iff_ne]"}], "hypo_name": [["hab"]]}
{"Finset.disjoint_val": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Multiset.Disjoint (Finset.filter IsPrimePow (divisors a)).val (Finset.filter IsPrimePow (divisors b)).val", "rule": "rw [\u2190Finset.disjoint_val]"}], "hypo_name": [["hab"]]}
{"Finset.disjoint_coe": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint \u2191(Finset.filter IsPrimePow (divisors a)) \u2191(Finset.filter IsPrimePow (divisors b))", "rule": "rw [\u2190Finset.disjoint_coe]"}], "hypo_name": [["hab"]]}
{"Finset.disjoint_iff_inter_eq_empty": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Finset.filter IsPrimePow (divisors a) \u2229 Finset.filter IsPrimePow (divisors b) = \u2205", "rule": "rw [Finset.disjoint_iff_inter_eq_empty]"}], "hypo_name": [["hab"]]}
{"Finset.disjoint_insert_erase": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.erase (Finset.filter IsPrimePow (divisors a)) ?m.2604064)\n    (insert ?m.2604064 (Finset.filter IsPrimePow (divisors b)))\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 ?m.2604064 \u2209 Finset.filter IsPrimePow (divisors b)\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115", "rule": "rw [\u2190Finset.disjoint_insert_erase]"}], "hypo_name": [["hab"]]}
{"Finset.disjoint_erase_insert": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (insert ?m.2604743 (Finset.filter IsPrimePow (divisors a)))\n    (Finset.erase (Finset.filter IsPrimePow (divisors b)) ?m.2604743)\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 ?m.2604743 \u2209 Finset.filter IsPrimePow (divisors a)\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115", "rule": "rw [\u2190Finset.disjoint_erase_insert]"}], "hypo_name": [["hab"]]}
{"Finset.sdiff_eq_self_iff_disjoint": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Finset.filter IsPrimePow (divisors a) \\ Finset.filter IsPrimePow (divisors b) = Finset.filter IsPrimePow (divisors a)", "rule": "rw [\u2190Finset.sdiff_eq_self_iff_disjoint]"}], "hypo_name": [["hab"]]}
{"Finset.filter_congr_decidable": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "rule": "rw [Finset.filter_congr_decidable]"}, {"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\ncase h\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 DecidablePred IsPrimePow", "rule": "rw [\u2190Finset.filter_congr_decidable]"}], "hypo_name": [["hab"]]}
{"Finset.filter_true_of_mem": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (divisors a) (Finset.filter IsPrimePow (divisors b))\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2200 x \u2208 divisors a, IsPrimePow x", "rule": "rw [Finset.filter_true_of_mem]"}], "hypo_name": [["hab"]]}
{"Finset.filter_false_of_mem": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint \u2205 (Finset.filter IsPrimePow (divisors b))\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2200 x \u2208 divisors a, \u00acIsPrimePow x", "rule": "rw [Finset.filter_false_of_mem]"}], "hypo_name": [["hab"]]}
{"Finset.filter_cons_of_neg": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (Finset.cons ?a (divisors a) ?ha)) (Finset.filter IsPrimePow (divisors b))\n\ncase a\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115\n\ncase ha\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 ?a \u2209 divisors a\n\ncase hp\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u00acIsPrimePow ?a", "rule": "rw [\u2190Finset.filter_cons_of_neg]"}], "hypo_name": [["hab"]]}
{"Prime.coprime_iff_not_dvd": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : \u00aca \u2223 b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Prime a", "rule": "rw [Prime.coprime_iff_not_dvd] at hab"}], "hypo_name": [["hab"]]}
{"Function.update_comp_eq_of_forall_ne'": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))\n\ncase i\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115\n\ncase a\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Decidable (IsPrimePow ?i)\n\ncase h\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2200 (x : \u2115), x \u2260 ?i", "rule": "rw [\u2190Function.update_comp_eq_of_forall_ne']"}], "hypo_name": [["hab"]]}
{"sdiff_eq_left": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Finset.filter IsPrimePow (divisors a) \\ Finset.filter IsPrimePow (divisors b) = Finset.filter IsPrimePow (divisors a)", "rule": "rw [\u2190sdiff_eq_left]"}], "hypo_name": [["hab"]]}
{"sdiff_eq_self_iff_disjoint": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Finset.filter IsPrimePow (divisors b) \\ Finset.filter IsPrimePow (divisors a) = Finset.filter IsPrimePow (divisors b)", "rule": "rw [\u2190sdiff_eq_self_iff_disjoint]"}], "hypo_name": [["hab"]]}
{"sdiff_eq_self_iff_disjoint'": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Finset.filter IsPrimePow (divisors a) \\ Finset.filter IsPrimePow (divisors b) = Finset.filter IsPrimePow (divisors a)", "rule": "rw [\u2190sdiff_eq_self_iff_disjoint']"}], "hypo_name": [["hab"]]}
{"disjoint_comm": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors b)) (Finset.filter IsPrimePow (divisors a))", "rule": "rw [disjoint_comm]"}, {"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors b)) (Finset.filter IsPrimePow (divisors a))", "rule": "rw [\u2190disjoint_comm]"}], "hypo_name": [["hab"]]}
{"disjoint_iff_inf_le": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Finset.filter IsPrimePow (divisors a) \u2293 Finset.filter IsPrimePow (divisors b) \u2264 \u22a5", "rule": "rw [disjoint_iff_inf_le]"}], "hypo_name": [["hab"]]}
{"disjoint_iff": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Finset.filter IsPrimePow (divisors a) \u2293 Finset.filter IsPrimePow (divisors b) = \u22a5", "rule": "rw [disjoint_iff]"}], "hypo_name": [["hab"]]}
{"codisjoint_toDual_iff": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Codisjoint (OrderDual.toDual (Finset.filter IsPrimePow (divisors a)))\n    (OrderDual.toDual (Finset.filter IsPrimePow (divisors b)))", "rule": "rw [\u2190codisjoint_toDual_iff]"}], "hypo_name": [["hab"]]}
{"symmDiff_eq_sup": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 symmDiff (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b)) =\n    Finset.filter IsPrimePow (divisors a) \u2294 Finset.filter IsPrimePow (divisors b)", "rule": "rw [\u2190symmDiff_eq_sup]"}], "hypo_name": [["hab"]]}
{"le_symmDiff_iff_left": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Finset.filter IsPrimePow (divisors a) \u2264\n    symmDiff (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "rule": "rw [\u2190le_symmDiff_iff_left]"}], "hypo_name": [["hab"]]}
{"le_symmDiff_iff_right": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Finset.filter IsPrimePow (divisors b) \u2264\n    symmDiff (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "rule": "rw [\u2190le_symmDiff_iff_right]"}], "hypo_name": [["hab"]]}
{"Nat.filter_dvd_eq_divisors": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (Finset.filter (fun x => x \u2223 a) (Finset.range (succ a))))\n    (Finset.filter IsPrimePow (divisors b))\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 a \u2260 0", "rule": "rw [\u2190Nat.filter_dvd_eq_divisors]"}], "hypo_name": [["hab"]]}
{"Nat.insert_self_properDivisors": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (insert a (properDivisors a))) (Finset.filter IsPrimePow (divisors b))\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 a \u2260 0", "rule": "rw [\u2190Nat.insert_self_properDivisors]"}], "hypo_name": [["hab"]]}
{"Nat.cons_self_properDivisors": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (Finset.cons a (properDivisors a) (_ : a \u2209 properDivisors a)))\n    (Finset.filter IsPrimePow (divisors b))\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 a \u2260 0", "rule": "rw [\u2190Nat.cons_self_properDivisors]"}], "hypo_name": [["hab"]]}
{"Nat.divisors_filter_dvd_of_dvd": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (Finset.filter (fun x => x \u2223 a) (divisors ?m.6344113)))\n    (Finset.filter IsPrimePow (divisors b))\n\ncase hn\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 ?m.6344113 \u2260 0\n\ncase hm\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 a \u2223 ?m.6344113\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 \u2115", "rule": "rw [\u2190Nat.divisors_filter_dvd_of_dvd]"}], "hypo_name": [["hab"]]}
{"Nat.image_fst_divisorsAntidiagonal": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (Finset.image Prod.fst (divisorsAntidiagonal a)))\n    (Finset.filter IsPrimePow (divisors b))", "rule": "rw [\u2190Nat.image_fst_divisorsAntidiagonal]"}], "hypo_name": [["hab"]]}
{"Nat.image_snd_divisorsAntidiagonal": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (Finset.image Prod.snd (divisorsAntidiagonal a)))\n    (Finset.filter IsPrimePow (divisors b))", "rule": "rw [\u2190Nat.image_snd_divisorsAntidiagonal]"}], "hypo_name": [["hab"]]}
{"Nat.Prime.divisors": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow {1, a}) (Finset.filter IsPrimePow (divisors b))\n\nR : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Prime a", "rule": "rw [Nat.Prime.divisors]"}], "hypo_name": [["hab"]]}
{"Nat.image_div_divisors_eq_divisors": [{"init_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (divisors a)) (Finset.filter IsPrimePow (divisors b))", "next_state": "R : Type u_1\ninst\u271d : CommMonoidWithZero R\nn p : R\nk a b : \u2115\nhab : Coprime a b\n\u22a2 Disjoint (Finset.filter IsPrimePow (Finset.image (fun x => a / x) (divisors a)))\n    (Finset.filter IsPrimePow (divisors b))", "rule": "rw [\u2190Nat.image_div_divisors_eq_divisors]"}], "hypo_name": [["hab"]]}
